/*
// from ChatGPT 4 on Bing

import React, { useState, useEffect } from 'react';
import { View, Text, Image, Button, StyleSheet } from 'react-native';
import { API, graphqlOperation, Storage } from 'aws-amplify';
import { getUser } from './graphql/queries'; // generated by Amplify CLI
import { updateUser } from './graphql/mutations'; // generated by Amplify CLI
import * as ImagePicker from 'expo-image-picker';

const UserScreen = () => {
  const [user, setUser] = useState(null);
  const [image, setImage] = useState(null);

  useEffect(() => {
    // fetch the user data from the GraphQL API
    const fetchUser = async () => {
      try {
        const result = await API.graphql(graphqlOperation(getUser, { id: 'some-user-id' }));
        const user = result.data.getUser;
        setUser(user);
        // get the signed URL for the user picture from S3
        const url = await Storage.get(user.picture);
        setImage(url);
      } catch (error) {
        console.error(error);
      }
    };
    fetchUser();
  }, []);

  const handleSelectPicture = async () => {
    // let the user pick a picture from their device
    const result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.Images,
      allowsEditing: true,
      aspect: [1, 1],
      quality: 1,
    });
    if (!result.cancelled) {
      // upload the new picture to S3
      const fileName = `user-${user.id}-${Date.now()}.jpg`;
      await Storage.put(fileName, result.uri, {
        contentType: 'image/jpeg',
      });
      // update the user picture in the database
      await API.graphql(
        graphqlOperation(updateUser, {
          input: {
            id: user.id,
            picture: fileName,
          },
        })
      );
      // get the signed URL for the new picture from S3
      const url = await Storage.get(fileName);
      setImage(url);
    }
  };

  if (!user) {
    return <Text>Loading...</Text>;
  }

  return (
    <View style={styles.container}>
      <Text style={styles.name}>{user.name}</Text>
      <Image style={styles.image} source={{ uri: image }} />
      <Button title="Select a new picture" onPress={handleSelectPicture} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  name: {
    fontSize: 24,
    fontWeight: 'bold',
    margin: 10,
  },
  image: {
    width: 200,
    height: 200,
    borderRadius: 100,
    margin: 10,
  },
});

export default UserScreen;
*/

